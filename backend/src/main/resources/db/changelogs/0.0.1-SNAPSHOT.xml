<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <changeSet id="000001" author="viannagustavo71@gmail.com">
        <sql>
            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        </sql>

        <comment>
            Adiciona extensão para gerar UUID's
        </comment>
    </changeSet>

    <changeSet id="000002" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS products (
                id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                stock INT DEFAULT 0,
                price DECIMAL(7, 2) NOT NULL,
                cost DECIMAL(7,2) NOT NULL,
                created_at TIMESTAMP DEFAULT NOW(),
                updated_at TIMESTAMP DEFAULT NOW(),
                name VARCHAR(100) NOT NULL,
                description TEXT,
                image_url TEXT
            );
        </sql>

        <comment>
            Cria a tabela de produtos
        </comment>
    </changeSet>

    <changeSet id="000003" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS users (
                id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                user_type VARCHAR(10) NOT NULL DEFAULT 'CUSTOMER',
                name VARCHAR(100) NOT NULL,
                email VARCHAR(100) UNIQUE NOT NULL,
                password VARCHAR(100) NOT NULL
            );
        </sql>

        <comment>
            Cria a tabela de usuários
        </comment>
    </changeSet>

    <changeSet id="000004" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS orders (
                id BIGSERIAL PRIMARY KEY,
                created_at TIMESTAMP DEFAULT NOW(),
                date_finished TIMESTAMP,
                date_cancelled TIMESTAMP,
                user_id UUID,
                status VARCHAR(10) NOT NULL DEFAULT 'OPEN',
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
            );
        </sql>

        <comment>
            Cria a tabela de pedidos
        </comment>
    </changeSet>

    <changeSet id="000005" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS order_items (
                order_id BIGINT NOT NULL,
                product_id UUID NOT NULL,
                quantity INT NOT NULL DEFAULT 1,
                PRIMARY KEY (order_id, product_id),
                FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
                FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
            );
        </sql>

        <comment>
            Cria a tabela de relação entre pedidos e produtos
        </comment>
    </changeSet>

    <changeSet id="000006" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS payments (
                id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                order_id BIGINT NOT NULL,
                payment_date TIMESTAMP DEFAULT NOW(),
                amount DECIMAL(7, 2) NOT NULL,
                method VARCHAR(10) NOT NULL,
                FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE
            );
        </sql>

        <comment>
            Cria a tabela de pagamentos
        </comment>
    </changeSet>

    <changeSet id="000007" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS canteens (
                id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                manager_id UUID REFERENCES users(id),
                created_at TIMESTAMP DEFAULT NOW(),
                name VARCHAR(100) NOT NULL,
                address VARCHAR(150)
            );
        </sql>

        <comment>
            Cria a tabela de cantinas
        </comment>
    </changeSet>

    <changeSet id="000008" author="viannagustavo71@gmail.com">
        <sql>
            CREATE TABLE IF NOT EXISTS user_canteens (
                user_id UUID REFERENCES users(id) ON DELETE CASCADE,
                canteen_id UUID REFERENCES canteens(id) ON DELETE CASCADE,
                PRIMARY KEY (user_id, canteen_id)
            );
        </sql>

        <comment>
            Cria a tabela de relação entre usuários e cantinas
        </comment>
    </changeSet>

    <changeSet id="000009" author="viannagustavo71@gmail.com">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="products" columnName="canteen_id"/>
                <columnExists tableName="orders" columnName="canteen_id"/>
                <columnExists tableName="payments" columnName="canteen_id"/>
                <columnExists tableName="users" columnName="canteen_id"/>
            </not>
        </preConditions>

        <sql>
            ALTER TABLE products ADD COLUMN canteen_id UUID REFERENCES canteens(id);
            ALTER TABLE orders ADD COLUMN canteen_id UUID REFERENCES canteens(id);
            ALTER TABLE payments ADD COLUMN canteen_id UUID REFERENCES canteens(id);
            ALTER TABLE users ADD COLUMN canteen_id UUID REFERENCES canteens(id);
        </sql>

        <comment>
            Adiciona a coluna canteen_id a todas as tabelas relevantes
        </comment>
    </changeSet>

</databaseChangeLog>
